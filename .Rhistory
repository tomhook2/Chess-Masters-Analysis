# Remove games where result is "*"
filter(Result != "*")
#--------------------------------------------------------------------------------
# 3. Save file at game level to be used in r markdown
saveRDS(tblGames, "Data Outputs/Games.rds")
print("script complete")
# Note to self:
# need a creative solution to add ID to the Masters dataset. joining on name isn't ideal...
# maybe add ID to the masters table manually?
# What time lengths are the games? Mode? e.g. classical vs rapid etc.
# use this site https://ratings.fide.com/profile/1503014/chart
# for elo charts, take unique events! removes the same level dots
#--------------------------------------------------------------------------------
# FILE:                   Players
# DESCRIPTION:            Imports the Combined list STD, BLZ, RPD format TXT format file found on FIDE
#                         site http://ratings.fide.com/download_lists.phtml.
# AUTHOR:                 Tom Hook
# CONTACT:                thomashook1@outlook.com
# LAST UPDATED:           02/07/2023
# VERSION:                v0.2
#--------------------------------------------------------------------------------
# Clear environment
rm(list = ls())
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny, xml2, readr)
# Get the path of this saved file and set working directory to 2 folders above.
strPath = getActiveDocumentContext()$path
setwd(dirname(dirname(dirname(strPath))))
# Set the column specifications. Data is in a txt file, awkwardly formatted.
# Numbers below are the character lengths of each column
tblColumns <- fwf_widths(c(15, 61, 4, 4, 5, 5, 15, 4, 6, 4, 3, 6, 4, 3, 6, 4, 3, 6, 4))
# Read the file
tblPlayers <- read_fwf("Downloads/players_list_foa.txt", col_positions = tblColumns)
# Promote the first row as column headers
colnames(tblPlayers) <- as.character(unlist(tblPlayers[1, ]))
# Remove the first row from the data as it's the col headers
tblPlayers <- tblPlayers[-1, ]
# Convert col types
tblPlayers <- tblPlayers %>%
mutate(SRtng = as.numeric(SRtng),
SGm = as.numeric(SGm),
SK = as.numeric(SK),
RRtng = as.numeric(RRtng),
RGm = as.numeric(RGm),
Rk = as.numeric(Rk),
BRtng = as.numeric(BRtng),
BGm = as.numeric(BGm),
BK = as.numeric(BK),
`B-day` = as.numeric(`B-day`))
# Rename name col to full name
tblPlayers <- tblPlayers %>%
rename(FIDEName = Name)
# Write as RDS file
saveRDS(tblPlayers, "Data Outputs/Titled Players.rds")
#--------------------------------------------------------------------------------
# FILE:                   Profiles
# DESCRIPTION:            Creates a FIDE Profiles table for each Master with
#                         games available for download.
# AUTHOR:                 Tom Hook
# CONTACT:                thomashook1@outlook.com
# LAST UPDATED:           02/07/2023
# VERSION:                v0.2
#--------------------------------------------------------------------------------
# Clear environment
rm(list = ls())
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
# Get the path of this saved file and set working directory to 2 folders above.
strPath = getActiveDocumentContext()$path
setwd(dirname(dirname(dirname(strPath))))
# Read data
tblPlayers <- readRDS("Data Outputs/Titled Players.rds")
tblMastersID <- read.csv("FIDE IDs.csv")
# Credit to https://www.chessgames.com/alpha3.html for making the countries download available
tblCountries <- read.csv("Downloads/Countries.csv")
# Convert ID col to character
tblMastersID <- tblMastersID %>%
mutate(FIDE_ID = as.character(FIDE_ID))
# Join players data from FIDE
tblProfiles <- tblMastersID %>%
left_join(tblPlayers, by = c("FIDE_ID" = "ID Number"))
# Reorder cols to have FIDE ID 1st col
tblProfiles <- tblProfiles[, c("FIDE_ID", setdiff(names(tblProfiles), "FIDE_ID"))]
# Add geography data
tblProfiles <- tblProfiles %>%
left_join(tblCountries, by = "Fed")
# Save file at game level to be used in r markdown
write.csv(tblProfiles, "Data Outputs/Profiles.csv", row.names = FALSE)
# IDs could be wrong if the master hasn't got a FIDE profile, but there was a match for them from another person
# Need to review this
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
# Get the path of this saved file and set working directly to folder above.
strPath = getActiveDocumentContext()$path
setwd(dirname(dirname(strPath)))
tblPlayers <- readRDS("Data Outputs/Titled Players.rds")
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
# Get the path of this saved file and set working directory to 2 folders above.
strPath = getActiveDocumentContext()$path
setwd(dirname(dirname(dirname(strPath))))
tblPlayers <- readRDS("Data Outputs/Titled Players.rds")
tblMastersID <- read.csv("FIDE IDs.csv")
tblProfiles <- read.csv("Data Outputs/Profiles.csv")
tblGames <- readRDS("Data Outputs/Games.rds")
tblOpeningRef <- read.csv("Downloads/Chess Opening Reference.csv")
# Load packages
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny, knitr, flexdashboard, DT)
# Load relevant data
tblGames <- readRDS("Data Outputs/Games.rds")
tblProfiles <- read.csv("Data Outputs/Profiles.csv")
plotEloTimeseries <- ggplot(tblMasterGames, aes(x = Date, y = EloMaster)) +
geom_line() +
labs(title = paste("Rating over Time for", tblProfiles$FullName[i]),
x = "Year", y = "FIDE Rating")
# Table of most common openings by Master for white pieces
tblOpeningsWhite <- tblMasterGames %>%
filter(PiecesMaster == "White") %>%
group_by(Opening) %>%
summarise(count = n()) %>%
arrange(desc(count))
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
tblPlayers <- readRDS("Data Outputs/Titled Players.rds")
tblMastersID <- read.csv("FIDE IDs.csv")
tblProfiles <- read.csv("Data Outputs/Profiles.csv")
tblGames <- readRDS("Data Outputs/Games.rds")
tblOpeningRef <- read.csv("Downloads/Chess Opening Reference.csv")
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
# Get the path of this saved file and set working directly to folder above.
#strPath = getActiveDocumentContext()$path
#setwd(dirname(dirname(strPath)))
for (Master in tblProfiles$FullName) {
rmarkdown::render(
input = "Profile-Pages.Rmd",
output_file = file.path("Profiles", paste(Master, "Profile.html")),
params = list(Master = Master)
)
}
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
# Get the path of this saved file and set working directly to folder above.
#strPath = getActiveDocumentContext()$path
#setwd(dirname(dirname(strPath)))
for (Master in tblProfiles$FullName) {
rmarkdown::render(
input = "Profile-Pages.Rmd",
output_file = file.path("Profiles", paste("Profile -", .html)),
params = list(Master = Master)
)
}
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
# Get the path of this saved file and set working directly to folder above.
#strPath = getActiveDocumentContext()$path
#setwd(dirname(dirname(strPath)))
for (Master in tblProfiles$FullName) {
rmarkdown::render(
input = "Profile-Pages.Rmd",
output_file = file.path("Profiles", paste0("Profile - ",Master, ".html")),
params = list(Master = Master)
)
}
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
# Get the path of this saved file and set working directly to folder above.
#strPath = getActiveDocumentContext()$path
#setwd(dirname(dirname(strPath)))
for (Master in tblProfiles$FullName) {
rmarkdown::render(
input = "Profile-Pages.Rmd",
output_file = file.path("Profiles", paste0("Profile - ",Master, ".html")),
params = list(Master = Master)
)
}
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
# Get the path of this saved file and set working directly to folder above.
#strPath = getActiveDocumentContext()$path
#setwd(dirname(dirname(strPath)))
for (Master in tblProfiles$FullName) {
rmarkdown::render(
input = "Profile-Pages.Rmd",
output_file = file.path("Profiles", paste0("Profile - ",Master, ".html")),
params = list(Master = Master)
)
}
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
# Get the path of this saved file and set working directly to folder above.
#strPath = getActiveDocumentContext()$path
#setwd(dirname(dirname(strPath)))
for (Master in tblProfiles$FullName) {
rmarkdown::render(
input = "Profile-Pages.Rmd",
output_file = file.path("Profiles", paste0("Profile - ",Master, ".html")),
params = list(Master = Master)
)
}
?datatable
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
# Get the path of this saved file and set working directly to folder above.
#strPath = getActiveDocumentContext()$path
#setwd(dirname(dirname(strPath)))
for (Master in tblProfiles$FullName) {
rmarkdown::render(
input = "Profile-Pages.Rmd",
output_file = file.path("Profiles", paste0("Profile - ",Master, ".html")),
params = list(Master = Master)
)
}
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
# Get the path of this saved file and set working directly to folder above.
strPath = getActiveDocumentContext()$path
setwd(dirname(dirname(strPath)))
tblProfiles <- read.csv("Data Outputs/Profiles.csv")
tblProfiles <- read.csv("Data Outputs/Profiles.csv")
getwd()
# Get the path of this saved file and set working directly to folder above.
strPath = getActiveDocumentContext()$path
setwd(dirname(strPath))
getwd()
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
# Get the path of this saved file and set working directly to folder above.
strPath = getActiveDocumentContext()$path
setwd(dirname(strPath))
tblProfiles <- read.csv("Data Outputs/Profiles.csv")
for (Master in tblProfiles$FullName) {
rmarkdown::render(
input = "Profile-Pages.Rmd",
output_file = file.path("Profiles", paste0(Master, ".html")),
params = list(Master = Master)
)
}
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
# Get the path of this saved file and set working directly to folder above.
strPath = getActiveDocumentContext()$path
setwd(dirname(strPath))
tblProfiles <- read.csv("Data Outputs/Profiles.csv")
for (Master in tblProfiles$FullName) {
rmarkdown::render(
input = "Profile-Pages.Rmd",
output_file = file.path("Profiles", paste0(Master, ".html")),
params = list(Master = Master)
)
}
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
# Get the path of this saved file and set working directly to folder above.
strPath = getActiveDocumentContext()$path
setwd(dirname(strPath))
tblProfiles <- read.csv("Data Outputs/Profiles.csv")
for (Master in tblProfiles$FullName) {
rmarkdown::render(
input = "Profile-Pages.Rmd",
output_file = file.path("Profiles", paste0(Master, ".html")),
params = list(Master = Master)
)
}
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
# Get the path of this saved file and set working directly to folder above.
strPath = getActiveDocumentContext()$path
setwd(dirname(strPath))
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
# Get the path of this saved file and set working directly to folder above.
strPath = getActiveDocumentContext()$path
setwd(dirname(strPath))
tblProfiles <- read.csv("Data Outputs/Profiles.csv")
for (Master in tblProfiles$FullName) {
rmarkdown::render(
input = "Profile-Pages.Rmd",
output_file = file.path("Profiles", paste0(Master, ".html")),
params = list(Master = Master)
)
}
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
# Get the path of this saved file and set working directly to folder above.
strPath = getActiveDocumentContext()$path
setwd(dirname(strPath))
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
# Get the path of this saved file and set working directly to folder above.
strPath = getActiveDocumentContext()$path
setwd(dirname(strPath))
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
# Get the path of this saved file and set working directly to folder above.
strPath = getActiveDocumentContext()$path
setwd(dirname(strPath))
tblProfiles <- read.csv("Data Outputs/Profiles.csv")
for (Master in tblProfiles$FullName) {
rmarkdown::render(
input = "Profile-Pages.Rmd",
output_file = file.path("Profiles", paste0(Master, ".html")),
params = list(Master = Master)
)
}
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny, knitr, flexdashboard, DT,
kable, kableExtra)
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
# Get the path of this saved file and set working directly to folder above.
strPath = getActiveDocumentContext()$path
setwd(dirname(strPath))
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
# Get the path of this saved file and set working directly to folder above.
strPath = getActiveDocumentContext()$path
setwd(dirname(strPath))
tblProfiles <- read.csv("Data Outputs/Profiles.csv")
for (Master in tblProfiles$FullName) {
rmarkdown::render(
input = "Profile-Pages.Rmd",
output_file = file.path("Profiles", paste0(Master, ".html")),
params = list(Master = Master)
)
}
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
# Get the path of this saved file and set working directly to folder above.
strPath = getActiveDocumentContext()$path
setwd(dirname(strPath))
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
# Get the path of this saved file and set working directly to folder above.
strPath = getActiveDocumentContext()$path
setwd(dirname(strPath))
tblProfiles <- read.csv("Data Outputs/Profiles.csv")
for (Master in tblProfiles$FullName) {
rmarkdown::render(
input = "Profile-Pages.Rmd",
output_file = file.path("Profiles", paste0(Master, ".html")),
params = list(Master = Master)
)
}
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
# Get the path of this saved file and set working directly to folder above.
strPath = getActiveDocumentContext()$path
setwd(dirname(strPath))
tblProfiles <- read.csv("Data Outputs/Profiles.csv")
for (Master in tblProfiles$FullName[1]) {
rmarkdown::render(
input = "Profile-Pages.Rmd",
output_file = file.path("Profiles", paste0(Master, ".html")),
params = list(Master = Master)
)
}
tblOpeningsWhite <- tblMasterGames %>%
filter(PiecesMaster == "White") %>%
group_by(ECO, Opening) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
slice(1:20) %>%
kable()
tblOpeningsBlack <- tblMasterGames %>%
filter(PiecesMaster == "Black") %>%
group_by(Opening) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
slice(1:20) %>%
kable()
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
# Get the path of this saved file and set working directly to folder above.
strPath = getActiveDocumentContext()$path
setwd(dirname(strPath))
tblProfiles <- read.csv("Data Outputs/Profiles.csv")
for (Master in tblProfiles$FullName[1]) {
rmarkdown::render(
input = "Profile-Pages.Rmd",
output_file = file.path("Profiles", paste0(Master, ".html")),
params = list(Master = Master)
)
}
# Table of most common openings by Master for white pieces
tblOpeningsWhite <- tblMasterGames %>%
filter(PiecesMaster == "White") %>%
group_by(ECO, Opening) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
slice(1:20) %>%
kable()
tblMasterGames <- tblGames %>%
filter(FullName == params$Master)
# Filter for current master
tblMasterGames <- tblGames %>%
filter(FullName == "Michael Adams")
# Table of most common openings by Master for white pieces
tblOpeningsWhite <- tblMasterGames %>%
filter(PiecesMaster == "White") %>%
group_by(ECO, Opening) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
slice(1:20) %>%
kable()
tblOpeningsWhite
# Table of most common openings by Master for white pieces
tblOpeningsWhite <- tblMasterGames %>%
filter(PiecesMaster == "White") %>%
group_by(ECO, Opening) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
slice(1:20) #%>%
View(tblOpeningsWhite)
View(tblOpeningsWhite)
tblOpeningRef <- read.csv("Downloads/Chess Opening Reference.csv")
View(tblOpeningRef)
# Install/Load the libraries
if(!require("pacman")) install.packages("pacman"); library (pacman)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny)
# Get the path of this saved file and set working directly to folder above.
strPath = getActiveDocumentContext()$path
setwd(dirname(strPath))
tblProfiles <- read.csv("Data Outputs/Profiles.csv")
for (Master in tblProfiles$FullName[1]) {
rmarkdown::render(
input = "Profile-Pages.Rmd",
output_file = file.path("Profiles", paste0(Master, ".html")),
params = list(Master = Master)
)
}
View(tblGames)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny, knitr, flexdashboard, DT,
kableExtra, pak)
?pivotr
??pivotr
pak::pak("wurli/pivotr")
pivotr::pivotr()
pak::pak("wurli/pivotr")
pkgbuild::check_build_tools(debug = TRUE)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny, knitr, flexdashboard, DT,
kableExtra, pak)
pacman::p_load(readxl, dplyr, tidyverse, zoo, here, lubridate, rstudioapi, tidyr,
data.table, stringr, openxlsx, shiny, knitr, flexdashboard, DT,
kableExtra, pak, pkgbuild)
pkgbuild::check_build_tools(debug = TRUE)
pkgbuild::check_build_tools(debug = TRUE)
pivotr::pivotr()
pak::pak("wurli/pivotr")
pkgbuild::check_build_tools(debug = TRUE)
pak::pak("wurli/pivotr")
pak::pak("wurli/pivotr")
pivotr::pivotr()
